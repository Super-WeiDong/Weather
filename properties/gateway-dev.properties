server.port=8200

#Route for search service
spring.cloud.gateway.routes[0].id=weatherModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

#Route for detail service
spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

#Route for hibernate-student service
spring.cloud.gateway.routes[2].id=hibernate-studentModule
spring.cloud.gateway.routes[2].uri=lb://hibernate-student
spring.cloud.gateway.routes[2].predicates[0]=Path=/students/**

#Route for Eureka
#http://localhost:8200/eureka/web
spring.cloud.gateway.routes[3].id=eurekaModule
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[3].filters[0]=SetPath=/

spring.cloud.gateway.routes[4].id=eureka-staticModule
spring.cloud.gateway.routes[4].uri=http://localhost:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

spring.cloud.gateway.discovery.locator.enabled=true

myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*

#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway = TRACE